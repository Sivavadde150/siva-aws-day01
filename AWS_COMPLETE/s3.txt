# S3 (Simple Storage Service) in AWS
# S3 is an object storage service that offers industry-leading scalability, data availability, security, and performance.
# It is designed to store and retrieve any amount of data from anywhere on the web.
# S3 is commonly used for backup, archiving, and as a data lake for big data analytics.

# Key Features of S3:

# 1. Buckets: S3 stores data in containers called buckets. Each bucket can hold an unlimited number of objects (files).
#    - Buckets are globally unique across all AWS accounts.
#    - You can create, delete, and manage buckets using the AWS Management Console, AWS CLI, or SDKs.
#    - AWS Management Console Steps:
#        1. Go to the S3 service in the AWS Console.
#        2. Click "Create bucket".
#        3. Enter a unique bucket name and select a region.
#        4. Configure options as needed and click "Create bucket".
#    - AWS CLI Example:
#        aws s3 mb s3://my-unique-bucket-name --region us-east-1
#        # 'mb' stands for 'make bucket'. Replace 'my-unique-bucket-name' with your desired name.
#        aws s3 rb s3://my-unique-bucket-name --force
#        # 'rb' stands for 'remove bucket'. '--force' deletes all objects before removing the bucket.

# 2. Objects: An object consists of data, a key (name), and metadata.
#    - Objects can be up to 5 TB in size.
#    - Each object is identified by a unique key within a bucket.
#    - AWS Management Console Steps:
#        1. Open your bucket in the S3 Console.
#        2. Click "Upload".
#        3. Add files or folders, set permissions and properties, then click "Upload".
#    - AWS CLI Example:
#        aws s3 cp myfile.txt s3://my-unique-bucket-name/
#        # 'cp' stands for 'copy'. This uploads 'myfile.txt' to the specified bucket.
#        aws s3 rm s3://my-unique-bucket-name/myfile.txt
#        # Removes the specified object from the bucket.

# 3. Storage Classes: S3 offers different storage classes to optimize cost and performance based on access patterns:
#    - S3 Standard: General-purpose storage for frequently accessed data.
#    - S3 Intelligent-Tiering: Automatically moves data between two access tiers when access patterns change.
#    - S3 Standard-IA (Infrequent Access): For data that is less frequently accessed but requires rapid access when needed.
#    - S3 One Zone-IA: Lower-cost option for infrequently accessed data that does not require multiple availability zones.
#    - S3 Glacier: Low-cost storage for data archiving with retrieval times ranging from minutes to hours.
#    - S3 Glacier Deep Archive: Lowest-cost storage for long-term data archiving with retrieval times of 12 hours or more.
#    - AWS Management Console Steps:
#        1. During upload, select the desired storage class under "Properties".
#        2. You can also change the storage class of existing objects by selecting them, clicking "Actions", and choosing "Change storage class".
#    - AWS CLI Example:
#        aws s3 cp myfile.txt s3://my-unique-bucket-name/ --storage-class STANDARD_IA
#        # Uploads with the specified storage class.
#        aws s3api copy-object --bucket my-unique-bucket-name --copy-source my-unique-bucket-name/myfile.txt --key myfile.txt --storage-class GLACIER
#        # Changes storage class of an existing object.

# 4. Versioning: S3 supports versioning, allowing you to keep multiple variants of an object in the same bucket.
#    - AWS Management Console Steps:
#        1. Open your bucket in the S3 Console.
#        2. Go to the "Properties" tab.
#        3. Under "Bucket Versioning", click "Edit" and enable versioning.
#    - AWS CLI Example:
#        aws s3api put-bucket-versioning --bucket my-unique-bucket-name --versioning-configuration Status=Enabled
#        # Enables versioning on the bucket.
#        aws s3api get-bucket-versioning --bucket my-unique-bucket-name
#        # Checks the versioning status of the bucket.