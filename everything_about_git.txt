# Everything About Git Commands: Explanations and Examples

## 1. Git Initialization

- **Initialize a new repository**
    ```
    git init
    ```
    Creates a new, empty Git repository in the current directory.

## 2. Configuration

- **Set user name and email**
    ```
    git config --global user.name "Your Name"
    git config --global user.email "you@example.com"
    ```
    Sets your identity for all repositories.

- **Check configuration**
    ```
    git config --list
    ```

## 3. Basic Workflow

- **Check status**
    ```
    git status
    ```
    Shows changed files, staged files, and untracked files.

- **Add files to staging**
    ```
    git add filename.txt
    git add .
    ```
    Stages changes for commit.

- **Commit changes**
    ```
    git commit -m "Commit message"
    ```
    Saves staged changes to the repository.

- **View commit history**
    ```
    git log
    ```
    Shows a list of commits.

## 4. Branching

- **List branches**
    ```
    git branch
    ```

- **Create a new branch**
    ```
    git branch new-feature
    ```

- **Switch to a branch**
    ```
    git checkout new-feature
    ```

- **Create and switch to a branch**
    ```
    git checkout -b new-feature
    ```

- **Merge a branch**
    ```
    git checkout main
    git merge new-feature
    ```

- **Delete a branch**
    ```
    git branch -d new-feature
    ```

## 5. Remote Repositories

- **Add a remote**
    ```
    git remote add origin https://github.com/user/repo.git
    ```

- **View remotes**
    ```
    git remote -v
    ```

- **Push to remote**
    ```
    git push origin main
    ```

- **Pull from remote**
    ```
    git pull origin main
    ```

- **Clone a repository**
    ```
    git clone https://github.com/user/repo.git
    ```

## 6. Stashing

- **Stash changes**
    ```
    git stash
    ```

- **List stashes**
    ```
    git stash list
    ```

- **Apply stash**
    ```
    git stash apply
    ```

## 7. Undoing Changes

- **Unstage a file**
    ```
    git reset HEAD filename.txt
    ```

- **Discard changes in a file**
    ```
    git checkout -- filename.txt
    ```

- **Revert a commit**
    ```
    git revert <commit-hash>
    ```

- **Reset to a previous commit**
    ```
    git reset --hard <commit-hash>
    ```

## 8. Tagging

- **Create a tag**
    ```
    git tag v1.0
    ```

- **List tags**
    ```
    git tag
    ```

- **Push tags**
    ```
    git push origin v1.0
    ```

## 9. Viewing Differences

- **Show changes**
    ```
    git diff
    ```

- **Show changes between commits**
    ```
    git diff commit1 commit2
    ```

## 10. Useful Shortcuts

- **Show a summary of commits**
    ```
    git log --oneline
    ```

- **Show who changed each line**
    ```
    git blame filename.txt
    ```

---

This covers the most common Git commands with explanations and examples. For more, see the official documentation: https://git-scm.com/docs